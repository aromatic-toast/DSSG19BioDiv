shiny::runApp()
package_vector = c("shiny", "leaflet", "tidyverse")
install.packages(package_vector)
install.packages(package_vector)
shiny::runApp()
runApp()
runApp()
df_sub <- head(df, 1000)
library(shiny)
library(leaflet)
library(dplyr)
df <- readRDS("./GBif_recency.rds")
df = read.csv("./GBif_recency.csv", stringsAsFactors = F)
colnames(df)[colnames(df)=="decimalLatitude"] <- "Latitude"
colnames(df)[colnames(df)=="decimalLongitude"] <- "Longitude"
df_sub <- head(df, 1000)
saveRDS(df, "./GBif_recency.rds")
library(shiny)
library(leaflet)
library(dplyr)
df <- readRDS("./GBif_recency.rds")
View(df)
df = read.csv("./GBif_recency.csv", stringsAsFactors = F)
colnames(df)[colnames(df)=="decimalLatitude"] <- "Latitude"
colnames(df)[colnames(df)=="decimalLongitude"] <- "Longitude"
df_sub <- head(df, 1000)
saveRDS(df_sub, "./GBif_recency.rds")
library(shiny)
library(leaflet)
library(dplyr)
df <- readRDS("./GBif_recency.rds")
runApp()
df = read.csv("./GBif_recency.csv", stringsAsFactors = F)
colnames(df)[colnames(df)=="decimalLatitude"] <- "Latitude"
colnames(df)[colnames(df)=="decimalLongitude"] <- "Longitude"
df_sub <- head(df, 1000)
saveRDS(df, "./GBif_recency.rds")
library(shiny)
library(leaflet)
library(dplyr)
df <- readRDS("./GBif_recency.rds")
runApp()
runApp()
no_year_info = function(x) {
lis = c()
for (sp in unique(x$species)) {
if (sum(!is.na(x$year[which(x$species == sp)]) == 0)) {lis = c(lis, sp)}
}
}
x = no_year_info(df)
no_year_info = function(x) {
lis = c()
for (sp in unique(x$species)) {
if (sum(!is.na(x$year[which(x$species == sp)]) == 0)) {lis = c(lis, sp)}
}
return(lis)
}
no_year_info(df)
#no_year_info = function(x) {
#  lis = c()
#  for (sp in unique(x$species)) {
#    if (sum(!is.na(x$year[which(x$species == sp)]) == 0)) {lis = c(lis, sp)}
#  }
#  return(lis)
#}
df = df[which(!is.na(df$year)),]
nrow(df)
df <- readRDS("./mun_years.rds")
df = df[1:1000,]
nrow(df)
colnames(df)
head(year)
head(df$year)
!is.na(df$year)
#no_year_info = function(x) {
#  lis = c()
#  for (sp in unique(x$species)) {
#    if (sum(!is.na(x$year[which(x$species == sp)]) == 0)) {lis = c(lis, sp)}
#  }
#  return(lis)
#}
df = df[!is.na(df$year),]
nrow(df)
shiny::runApp()
class(df$year)
runApp()
?scale_x_discrete
runApp()
runApp()
runApp()
df[which(df$species=="Abies lasiocarpa"),]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(rgdal)
sei <- readOGR(dsn = "/Users/raghav/Desktop/DSSG19BioDiv/mun_refined",
layer = "mun_refined")
library(rgdal)
sei <- readOGR(dsn = "/Users/raghav/Desktop/DSSG19BioDiv/mun_refined",
layer = "mun_refined")
library(rgdal)
sei <- readOGR(dsn = "/Users/raghav/Desktop/DSSG19BioDiv/mun_refined",
layer = "mun_refined")
getcwd()
getwd()
setwd("/Users/raghav/Desktop/DSSG19BioDiv/")
library(rgdal)
sei <- readOGR(dsn = "mun_refined",
layer = "mun_refined")
library(rgdal)
sei <- readOGR(dsn = "mun_refined",
layer = "boundary")
library(rgdal)
sei <- readOGR(dsn = "./boundary",
layer = "boundary")
library(rgdal)
sei <- readOGR(dsn = "boundary",
layer = "boundary")
getwd()
library(rgdal)
sei <- readOGR(dsn = "./boundary",
layer = "boundary")
readOGR(dsn = "./boundary",
layer = "boundary")
