count <- c(count, d)
print(count)
}
return(count)
y <- cbind(y, count)
y
x <- filter(df2, species=="Selasphorus rufus" & year>=2010 & year<=2018)
y <- as.data.frame(table(x$year))
gbif_count <- c()
for(i in unique(x$year)){
d <-  nrow(filter(x, year==i))
gbif_count <- c(gbif_count, d)
print(gbif_count)
}
return(gbif_count)
y <- cbind(y, gbif_count)
y <- mutate(y, normalized = Freq/gbif_count)
y
nrow(filter(x, year==2014)
nrow(filter(x, year==2014))
seq(2010:2018, by 1)
seq(2010:2018, by=1)
seq(from = 2010, to = 2018, by=1)
x <- filter(df2, species=="Selasphorus rufus" & year>=2010 & year<=2018)
y <- as.data.frame(table(x$year))
gbif_count <- c()
for(i in unique(df2$year>=2010 & year<=2018)){
d <-  nrow(filter(df2, year==i))
gbif_count <- c(gbif_count, d)
print(gbif_count)
}
x <- filter(df2, species=="Selasphorus rufus" & year>=2010 & year<=2018)
y <- as.data.frame(table(x$year))
gbif_count <- c()
for(i in unique(seq(from = 2010, to = 2018, by = 1)){
x <- filter(df2, species=="Selasphorus rufus" & year>=2010 & year<=2018)
y <- as.data.frame(table(x$year))
gbif_count <- c()
for(i in seq(from = 2010, to = 2018, by = 1){
d <-  nrow(filter(df2, year==i))
gbif_count <- c(gbif_count, d)
print(gbif_count)
}
return(gbif_count)
x <- filter(df2, species=="Selasphorus rufus" & year>=2010 & year<=2018)
y <- as.data.frame(table(x$year))
gbif_count <- c()
for(i in seq(from = 2010, to = 2018, by = 1){
d <-  nrow(filter(df2, year==i))
gbif_count <- c(gbif_count, d)
print(gbif_count)
}
nrow(filter(df2, year==2014))
x <- filter(df2, species=="Selasphorus rufus" & year>=2010 & year<=2018)
y <- as.data.frame(table(x$year))
gbif_count <- c()
for(i in seq(from = 2010, to = 2018, by = 1)){
d <-  nrow(filter(df2, year==i))
gbif_count <- c(gbif_count, d)
print(gbif_count)
}
y <- cbind(y, gbif_count)
y
y <- mutate(y, normalized = Freq/gbif_count)
y
ggplot(y, aes(x = Var1, y = gbif_count, group = 1))+
geom_line()+
geom_point()
max(table(df2$species))
View(filter(df2, class=="Aves"))
a <- filter(df2, species=="Corvus caurinus" & year>=2010 & year<=2018)
b <- as.data.frame(table(a$year))
gbif_count2 <- c()
for(i in seq(from = 2010, to = 2018, by = 1)){
d <-  nrow(filter(df2, year==i))
gbif_count2 <- c(gbif_count2, d)
print(gbif_count2)
}
b <- cbind(d, gbif_count2)
b <- mutate(b, normalized = Freq/gbif_count2)
b
a <- filter(df2, species=="Corvus caurinus" & year>=2010 & year<=2018)
b <- as.data.frame(table(a$year))
gbif_count2 <- c()
for(i in seq(from = 2010, to = 2018, by = 1)){
d <-  nrow(filter(df2, year==i))
gbif_count2 <- c(gbif_count2, d)
print(gbif_count2)
}
b <- cbind(b, gbif_count2)
b <- mutate(b, normalized = Freq/gbif_count2)
b
c <- cbind(y, b)
c
c <- rbind(y, b)
x <- filter(df2, species=="Selasphorus rufus" & year>=2010 & year<=2018)
y <- as.data.frame(table(x$year))
gbif_count <- c()
for(i in seq(from = 2010, to = 2018, by = 1)){
d <-  nrow(filter(df2, year==i))
gbif_count <- c(gbif_count, d)
print(gbif_count)
}
y <- cbind(y, gbif_count)
y <- mutate(y, normalized = Freq/gbif_count)
a <- filter(df2, species=="Corvus caurinus" & year>=2010 & year<=2018)
b <- as.data.frame(table(a$year))
gbif_count <- c()
for(i in seq(from = 2010, to = 2018, by = 1)){
d <-  nrow(filter(df2, year==i))
gbif_count <- c(gbif_count, d)
print(gbif_count)
}
b <- cbind(b, gbif_count)
b <- mutate(b, normalized = Freq/gbif_count)
b
y
x <- filter(df2, species=="Selasphorus rufus" & year>=2010 & year<=2018)
y <- as.data.frame(table(x$year))
gbif_count <- c()
for(i in seq(from = 2010, to = 2018, by = 1)){
d <-  nrow(filter(df2, year==i))
gbif_count <- c(gbif_count, d)
print(gbif_count)
}
y <- cbind(y, gbif_count)
y <- mutate(y, normalized = Freq/gbif_count)
a <- filter(df2, species=="Corvus caurinus" & year>=2010 & year<=2018)
b <- as.data.frame(table(a$year))
gbif_count2 <- c()
for(i in seq(from = 2010, to = 2018, by = 1)){
d <-  nrow(filter(df2, year==i))
gbif_count2 <- c(gbif_count2, d)
print(gbif_count2)
}
b <- cbind(b, gbif_count2)
b <- mutate(b, normalized = Freq/gbif_count2)
colnames(b) <- c("Var1", "Freq", "gbif_count", "normalized")
y
b
c <- rbind(y, b)
c
length(seq(from = 2010, to = 2018, by = 1))
species$c <- c(rep("Selasphorus rufus", length(seq(from = 2010, to = 2018, by = 1)),
rep("Corvus caurinus", length(seq(from = 2010, to = 2018, by = 1)))))
c$species <- c(rep("Selasphorus rufus", length(seq(from = 2010, to = 2018, by = 1)),
rep("Corvus caurinus", length(seq(from = 2010, to = 2018, by = 1)))))
c$species <- c(rep("Selasphorus rufus", length(seq(from = 2010, to = 2018, by = 1))),
rep("Corvus caurinus", length(seq(from = 2010, to = 2018, by = 1))))
c
ggplot(c, aes(x = Var1, y = normalized, group = species))+
geom_line()+
geom_point()
ggplot(c, aes(x = Var1, y = normalized, group = species))+
geom_line(aes(color=species))+
geom_point(aes(color = species))
unique(df2$kingdom)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
selectInput(inputID = "kingdom",
label = "Select a Kingdom",
choices = unique(df2$kingdom)),
selectInput(inputID= "sub-group",
label = "Select a Sub-group",
choices = select(filter(df2, kingdom==input$kingdom), species))),
mainPanel(
plotOutput("chart"),
leafletOutput("mymap",height = 1000))
)
)
#leafletOutput("mymap",height = 1000)
View(head(filter(df2, species==c("Selasphorus rufus", "Abeliophyllum distichum"))))
View((filter(df2, species==c("Selasphorus rufus", "Abeliophyllum distichum"))))
runApp()
runApp()
runApp()
View(filter(df2, kingdom=="Animalia" & species=="Selasphorus rufus"))
runApp()
runApp()
runApp()
runApp()
runApp()
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
selectInput(inputId = "kingdom",
label = "Select a Kingdom",
choices = unique(df2$kingdom),
multiple = T),
selectInput(inputId= "species",
label = "Select a Species",
choices = select(filter(df2, kingdom==input$kingdom), species))),
mainPanel(
plotOutput("chart"),
leafletOutput("mymap",height = 1000))
)
)
runApp()
runApp()
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
selectInput(inputId = "kingdom",
label = "Select a Species",
choices = unique(df2$species),
multiple = T)),
mainPanel(
plotOutput("chart"),
leafletOutput("mymap",height = 1000))
)
)
#leafletOutput("mymap",height = 1000)
#selectInput(inputId= "species",
#label = "Select a Species",
#choices = select(filter(df2, kingdom==input$kingdom), species))
server <- function(input,output, session){
output$chart <- renderPlot({
x <- filter(df2, species==input$species)
y <- as.data.frame(table(x$year))
gbif_count <- c()
for(i in seq(from = 2010, to = 2018, by = 1)){
d <-  nrow(filter(df2, year==i))
gbif_count <- c(gbif_count, d)
print(gbif_count)
}
y <- cbind(y, gbif_count)
y <- mutate(y, normalized = Freq/gbif_count)
ggplot(c, aes(x = Var1, y = normalized, group = 1))+
geom_line(aes(color=species))+
geom_point(aes(color = species))
})
data <- reactive({
x <- df
})
output$mymap <- renderLeaflet({
df <- data()
m <- leaflet(data = df) %>%
addTiles() %>%
addMarkers(lng = ~Longitude,
lat = ~Latitude,
popup = paste("Species", df$species, "<br>",
"Common Name:", df$common),
clusterOptions = markerClusterOptions())
m
})
}
shinyApp(ui = ui, server = server)
shinyApp()
runApp()
ui <- fluidPage(
titlePanel(title = "Species Observations Over Time"),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "kingdom",
label = "Select a Species",
choices = unique(df2$species),
multiple = T)),
mainPanel(
plotOutput("chart")
)
)
)
#
#leafletOutput("mymap",height = 1000)
#selectInput(inputId= "species",
#label = "Select a Species",
#choices = select(filter(df2, kingdom==input$kingdom), species))
server <- function(input,output, session){
output$chart <- renderPlot({
x <- filter(df2, species==input$species)
y <- as.data.frame(table(x$year))
gbif_count <- c()
for(i in seq(from = 2010, to = 2018, by = 1)){
d <-  nrow(filter(df2, year==i))
gbif_count <- c(gbif_count, d)
print(gbif_count)
}
y <- cbind(y, gbif_count)
y <- mutate(y, normalized = Freq/gbif_count)
ggplot(c, aes(x = Var1, y = normalized, group = 1))+
geom_line(aes(color=species))+
geom_point(aes(color = species))
})
data <- reactive({
x <- df
})
output$mymap <- renderLeaflet({
df <- data()
m <- leaflet(data = df) %>%
addTiles() %>%
addMarkers(lng = ~Longitude,
lat = ~Latitude,
popup = paste("Species", df$species, "<br>",
"Common Name:", df$common),
clusterOptions = markerClusterOptions())
m
})
}
runApp()
runApp()
runApp()
runApp()
runApp()
b
runApp()
a <- filter(df2, species=="Selasphorus rufus")
a
View(a)
b <- as.data.frame(table(a$year))
View(b)
runApp()
b
for(i in seq(from = 2010, to = 2018, by = 1)){
d <-  nrow(filter(df2, year==i))
gbif_count <- c(gbif_count, d)
}
b <- cbind(b, gbif_count)
gbif_count <- c()
for(i in seq(from = 2010, to = 2018, by = 1)){
d <-  nrow(filter(df2, year==i))
gbif_count <- c(gbif_count, d)
}
b <- cbind(b, gbif_count)
length(gbif_count)
nrow(b)
a <- filter(df2, species=="Selasphorus rufus" & year>=2010 & year<=2018)
nrow(a)
b <- as.data.frame(table(a$year))
b
gbif_count <- c()
for(i in seq(from = 2010, to = 2018, by = 1)){
d <-  nrow(filter(df2, year==i))
gbif_count <- c(gbif_count, d)
}
b <- cbind(b, gbif_count)
b
b <- mutate(b, normalized = Freq/gbif_count)
ggplot(b, aes(x = Var1, y = normalized, group = 1))+
geom_line()+
geom_point()
runApp()
library(shiny)
colnames(df2)[11:17]
colnames(df2)
colnames(df2)[2:7]
View(df_sub
View(df_sub)
colnames(df2)[2:7]
server <- function(input,output, session){
output$chart <- renderPlot({
a <- filter(df2, species==input$species & year>=2010 & year<=2018)
b <- as.data.frame(table(a$year))
gbif_count <- c()
for(i in seq(from = 2010, to = 2018, by = 1)){
d <-  nrow(filter(df2, year==i))
gbif_count <- c(gbif_count, d)
}
b <- cbind(b, gbif_count)
b <- mutate(b, normalized = Freq/gbif_count)
ggplot(b, aes(x = Var1, y = normalized, group = 1))+
geom_line()+
geom_point()
})
data <- reactive({
x <- df
})
output$mymap <- renderLeaflet({
df <- data()
m <- leaflet(data = df) %>%
addTiles() %>%
addMarkers(lng = ~Longitude,
lat = ~Latitude,
popup = paste("Species", df$species, "<br>",
"Common Name:", df$common),
clusterOptions = markerClusterOptions())
m
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
titlePanel(title = "Species Observations Over Time"),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "species",
label = "Select a Species",
choices = unique(df2$species),
multiple = F)),
mainPanel(
plotOutput("chart"),
leafletOutput("mymap",height = 1000)
)
)
)
server <- function(input,output, session){
output$chart <- renderPlot({
a <- filter(df2, species==input$species & year>=2010 & year<=2018)
b <- as.data.frame(table(a$year))
gbif_count <- c()
for(i in seq(from = 2010, to = 2018, by = 1)){
d <-  nrow(filter(df2, year==i))
gbif_count <- c(gbif_count, d)
}
b <- cbind(b, gbif_count)
b <- mutate(b, normalized = Freq/gbif_count)
ggplot(b, aes(x = Var1, y = normalized, group = 1))+
geom_line()+
geom_point()
})
data <- reactive({
x <- df
})
output$mymap <- renderLeaflet({
df <- data()
m <- leaflet(data = df) %>%
addTiles() %>%
addMarkers(lng = ~Longitude,
lat = ~Latitude,
popup = paste("Species", df$species, "<br>",
"Common Name:", df$common),
clusterOptions = markerClusterOptions())
m
})
}
shinyApp(ui = ui, server=server)
library(shiny)
library(leaflet)
library(tidyverse)
library(dplyr)
ui <- fluidPage(
titlePanel(title = "Species Observations Over Time"),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "species",
label = "Select a Species",
choices = unique(df2$species),
multiple = F)),
mainPanel(
plotOutput("chart"),
leafletOutput("mymap",height = 1000)
)
)
)
server <- function(input,output, session){
output$chart <- renderPlot({
a <- filter(df2, species==input$species & year>=2010 & year<=2018)
b <- as.data.frame(table(a$year))
gbif_count <- c()
for(i in seq(from = 2010, to = 2018, by = 1)){
d <-  nrow(filter(df2, year==i))
gbif_count <- c(gbif_count, d)
}
b <- cbind(b, gbif_count)
b <- mutate(b, normalized = Freq/gbif_count)
ggplot(b, aes(x = Var1, y = normalized, group = 1))+
geom_line()+
geom_point()
})
data <- reactive({
x <- df
})
output$mymap <- renderLeaflet({
df <- data()
m <- leaflet(data = df) %>%
addTiles() %>%
addMarkers(lng = ~Longitude,
lat = ~Latitude,
popup = paste("Species", df$species, "<br>",
"Common Name:", df$common),
clusterOptions = markerClusterOptions())
m
})
}
shinyApp(ui = ui, server=server)
x <- filter(df2, species=="Selasphorus rufus" & year>=2010 & year<=2018)
y <- as.data.frame(table(x$year))
gbif_count <- c()
for(i in seq(from = 2010, to = 2018, by = 1)){
d <-  nrow(filter(df2, year==i))
gbif_count <- c(gbif_count, d)
print(gbif_count)
}
y <- cbind(y, gbif_count)
y <- mutate(y, normalized = Freq/gbif_count)
# group 2
a <- filter(df2, species=="Corvus caurinus" & year>=2010 & year<=2018)
b <- as.data.frame(table(a$year))
gbif_count2 <- c()
for(i in seq(from = 2010, to = 2018, by = 1)){
d <-  nrow(filter(df2, year==i))
gbif_count2 <- c(gbif_count2, d)
print(gbif_count2)
}
b <- cbind(b, gbif_count2)
b <- mutate(b, normalized = Freq/gbif_count2)
colnames(b) <- c("Var1", "Freq", "gbif_count", "normalized")
c <- rbind(y, b)
c$species <- c(rep("Selasphorus rufus", length(seq(from = 2010, to = 2018, by = 1))),
rep("Corvus caurinus", length(seq(from = 2010, to = 2018, by = 1))))
ggplot(c, aes(x = Var1, y = normalized, group = species))+
geom_line(aes(color=species))+
geom_point(aes(color = species))
View(head(df))
runApp()
runApp()
runApp()
runApp()
saveRDS(df2, "/Users/lesley/Desktop/datasets/gbif_complete.rds")
runApp()
runApp()
runApp()
runApp()
